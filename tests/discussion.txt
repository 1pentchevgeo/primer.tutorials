Our test code should check the files that are part of the project now, not the files that I have been installed. As it is, we always need to install before testing. The cause, I think, is our use of the `system.package()` hack. So, perhaps we need a different way to come up withe the list of files we want to list. Isn't it easy to get such a list?

It is annoying that we need to identify a list of all the relevant files twice. We should have a function which does that once and which can be called in separate test files. Where would such a function live? Or maybe the code is just a one-liner that we don't mind having two copes of.

Any code in a tutorial code chunk, including in a hint, which produces an error when run on its own will cause an error if you use R CMD check. Most common example is when you have ... to indicate to the student that they should replace the ... with something. Best solution is to set eval = FALSE in all hint chunks like this. But the same warning applies for all chunks.

Testing is hard. There are (at least) two different environments in which we
run tests. First, and most important, is when we run R CMD check. This is the
most rigorous check. It requires that code written in all code chunks
(including hints) work correctly. So, you can't just have things like
library(...) around, even though that is an extremely convenient way to
indicate to the student that they need to use the library function with some
argument.

The second environment is when you press "Test Package". I think that all this
does is to source tests/testthat.R. (And this environment is (mostly) the same
as when you just execute tests interactively. At least, the two give the same
answer.) But, in this second case, the code in hint (and all other?) chunks is
not evaluated. The same problem arises if you just use "Run Document," as
students will do (in effect) when the press Start Tutorial.

I think that, in order to simulate the test that is run with R CMD check, you
need, from the R Console, to type:

rmarkdown::render("inst/tutorials/03-functions-A/tutorial.Rmd")

