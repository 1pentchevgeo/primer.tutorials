^renv$
^renv\.lock$
^renv.*$
^.*Rproj.*$
^LICENSE\.md$
^README\.Rmd$
^\.github$
^TODO\.txt$
^_pkgdown\.yml$
^docs$
^pkgdown$

# The line below excludes everything in any subdirectory of the tutorials directory
# except an images directory (a file named images would also be included) or a file
# suffixed with ".Rmd". This entire document is in Perl-like Regex. The only
# significant difference from Perl in this document is that "/" do not need to be
# escaped with a "\". The regex below, in plain English, matches (and so excludes)
# a path which begins with the characters "tutorials/"", and after those has any
# number (*) of characters except a "/" [^/], and after those has a "/", and
# after those does not have (?!...) either the characters "images" or (|) any
# number (*) of any character (.) followed by the characters "Rmd". If we used .*
# instead of defining the character class in [^/]*, the regex would evaluate the
# negative lookahead after the last "/" in the path. The files within the images
# directory would then be excluded, because they do neither the characters "images"
# or a string ending in "Rmd" after their last "/",

# To modify
tutorials/[^/]*/(?!(images|.*Rmd))
^.*\.Rproj$
^\.Rproj\.user$
